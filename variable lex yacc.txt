variable 
lexx 
%{
#include<stdio.h>
#include "y.tab.h"
%}
%%
new return NEW;
"[" return OPEN_SQ;
"]" return CLOSE_SQ;
"=" return EQ;
"," return COMMA;
"_" return UD;
(["\t"])+ return WS;
[a-zA-Z]+[a-zA-Z0-9]* return ID;
[0-9]+ return DIGIT;
\n return 0;
%%
////////////////////////////////////////////////////////////////
yacc

%{
#include<stdio.h>
#include "y.tab.h"
%}
%token BUILTIN UD WS ID OPEN_SQ CLOSE_SQ EQ NEW SC COMMA DIGIT
%%
start : varlist WS varlist {printf("invalid declaration \n\n");}
| varlist UD DIGIT {printf("valid declaration \n\n");}
| varlist {printf("valid declaration \n\n");}
| varlist UD varlist {printf("valid declaration \n\n");}
| varlist : varlist COMMA ID | ID;
%%
int yywrap()
{
return 1;
}
int main()
{
printf("\nEnter variable declaration: ");
yyparse();
return 1;
}
int yyerror(char *s)
{
fprintf(stderr,"invalid declaration\n\n",s);
return 1;
}

/////////////////////////


